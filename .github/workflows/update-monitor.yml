name: Update Monitor

on:
  push:
    branches:
      - master
      - back-up-local

jobs:
  UpdateMonitor:
    runs-on: ubuntu-latest
    outputs:
      ci_job: ${{ steps.projectmetrics.outputs.ci_job }}
    steps:
      - uses: actions/checkout@v3.2.0
      - name: Cache modules
        uses: actions/cache@v2
        env:
          cache-name: cache-modules
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-${{ hashFiles( './yarn.lock' ) }}
          restore-keys: |
            ${{ runner.os }}-
      - name: Build and Test
        id: projectmetrics
        run: |
          yarn
          yarn build
          yarn test
          SRC_SIZE=($(du -s src/))
          SRC_FILES_COUNT=($(find src -type f | wc -l))
          STATEMENT_COV=($(cat coverage/coverage-summary.json | jq ".total.statements.pct"))
          echo "::set-output name=code_size::$SRC_SIZE"
          echo "::set-output name=code_files_count::$SRC_FILES_COUNT"
          echo "::set-output name=statement-coverage::$STATEMENT_COV"
          echo "::set-output name=ci_job::${{github.job}}"
      - uses: ./
        name: Update Report for Files Size
        with:
          key: code-size
          value: ${{ steps.projectmetrics.outputs.code_size }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./
        name: Update Report for Files Count
        with:
          key: files-count
          value: ${{ steps.projectmetrics.outputs.code_files_count }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./
        name: Update Report for Statement Coverage
        with:
          key: statement-coverage
          value: ${{ steps.projectmetrics.outputs.statement-coverage }}
          token: ${{ secrets.GITHUB_TOKEN }}

  UpdateCITime:
    runs-on: ubuntu-latest
    needs: UpdateMonitor
    steps:
      - uses: actions/checkout@v3.2.0
      - name: test output
        run: |
          echo "${{ needs.UpdateMonitor.outputs.ci_job }}"
      - uses: ./
        name: Update Report for ci time
        with:
          key: ci-time
          type: job
          value: ${{github.run_id}}-${{ needs.UpdateMonitor.outputs.ci_job }}
          token: ${{ secrets.GITHUB_TOKEN }}
